services:
  task-service-builder:
    build: 
      context: taskService
      dockerfile: Dockerfile-builder
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - node_modules_server:/opt/builder/node_modules
      - app_server:/opt/builder/dist
  
  task-service-runner:
    build:
      context: taskService
      dockerfile: Dockerfile-runner
    depends_on:
      task-service-builder:
        condition: service_completed_successfully
    volumes:
      - node_modules_server:/opt/app/node_modules
      - app_server:/opt/app
    expose:
      - 3000

  frontend-builder:
    build:
      context: frontend
      dockerfile: Dockerfile-builder
    volumes:
      - next:/opt/builder/.next
      - node_modules_frontend:/opt/builder/node_modules
    depends_on:
      - task-service-runner
    
  frontend-runner:
    build:
      context: frontend
      dockerfile: Dockerfile-runner
    ports:
      - 3000:3000
    volumes:
      - next:/opt/app/.next
      - node_modules_frontend:/opt/app/node_modules
    depends_on:
      frontend-builder:
        condition: service_completed_successfully

  db:
    image: mariadb:11.3.2-jammy
    restart: always
    environment:
      - MARIADB_USER=asuka1975
      - MARIADB_PASSWORD=4btcAiqNym3Krv3
      - MARIADB_ROOT_PASSWORD=password
    volumes:
      - ./db/sql:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
  curl:
    image: curlimages/curl:latest
    entrypoint: tail -f /dev/null

volumes:
  node_modules_server:
  app_server:
  next:
  node_modules_frontend: